// Generated by CoffeeScript 1.8.0
var History, observe;

History = (function() {
  function History() {
    this._backwards = [];
    this._forwards = [];
  }

  return History;

})();

observe = function(obj) {
  var prop, _fn, _i, _len, _ref;
  Object.defineProperty(obj, "__History__", {
    enumerable: false,
    configurable: false,
    value: new History
  });
  Object.defineProperty(obj, "undo", {
    enumerable: false,
    configurable: false,
    writable: false,
    value: function() {
      var step;
      step = this.__History__._backwards.pop();
      this.__History__._forwards.push({
        key: step.key,
        value: this[step.key]
      });
      this[step.key] = step.value;
      this.__History__._backwards.pop();
      return this;
    }
  });
  Object.defineProperty(obj, "redo", {
    enumerable: false,
    configurable: false,
    writable: false,
    value: function() {
      var step;
      step = this.__History__._forwards.pop();
      this.__History__._backwards.push({
        key: step.key,
        value: this[step.key]
      });
      this[step.key] = step.value;
      this.__History__._backwards.pop();
      return this;
    }
  });
  _ref = Object.keys(obj);
  _fn = function(prop) {
    var property, value;
    value = obj[prop];
    property = prop;
    Object.defineProperty(obj, prop, {
      get: function() {
        return prop;
      },
      set: function(newVal) {
        var step;
        console.log(arguments);
        step = {
          key: property,
          value: prop
        };
        this.__History__._backwards.push(step);
        prop = newVal;
      }
    });
    return obj[property] = value;
  };
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    prop = _ref[_i];
    _fn(prop);
  }
};
